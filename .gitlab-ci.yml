stages:
  - ðŸ§¹ lint

variables:
  DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/pyqgis-qt-checker:latest
  DOCKER_IMAGE_GITTAG: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
  DOCKER_IMAGE_LATEST: ${DOCKER_IMAGE_NAME}:latest
  PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  PYTHON_MINIMAL_VERSION: "3.11"

cache:
  key:
    files:
      - requirements/*.txt
  paths:
    - ${PIP_CACHE_DIR}
    - ${PRE_COMMIT_HOME}

# -- LINT JOBS ---
git-hooks:
  stage: ðŸ§¹ lint
  tags:
    - oslandia_docker
  image: python:${PYTHON_MINIMAL_VERSION}
  before_script:
    - apt install git
    - python3 -m pip install -U pip setuptools wheel
    - python3 -m venv .venv
    - virtualenv venv
    - source .venv/bin/activate
    - pip install pre-commit
    - pre-commit install
    - git fetch origin
  script:
    - pre-commit run --from-ref "origin/$CI_DEFAULT_BRANCH" --to-ref "$CI_COMMIT_SHA";

# docker-hadolint:
#   stage: ðŸ§¹ lint
#   image: registry.gitlab.com/pipeline-components/hadolint:latest
#   tags:
#     - oslandia_docker
#   script:
#     - hadolint --version
#     - hadolint --verbose Dockerfile
#     # - mkdir -p reports
#     # - hadolint --verbose -f gitlab_codeclimate Dockerfile > reports/hadolint-$(md5sum Dockerfile | cut -d" " -f1).json
#   # artifacts:
#   #   name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
#   #   expire_in: 7 days
#   #   when: always
#   #   reports:
#   #     codequality:
#   #       - "reports/*"
#   #   paths:
#   #     - "reports/*"
